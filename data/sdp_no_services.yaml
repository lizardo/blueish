# Generate test script with:
# ./blueish.py testcases/device_connect.py data/base.yaml data/sdp.yaml \
#     data/sdp_no_services.yaml > test.py
# NOTE: A invalid SVC_SEARCH_ATTR_RSP is used on purpose to check if BlueZ
# breaks. It should print this SDP error message (which is just ignored):
# sdp_extract_seqtype: Unknown sequence type, aborting
- packet:
    data:
      cid: 64
      data: !sdp
        pdu_id: SVC_SEARCH_ATTR_REQ
        tid: 0
        params:
          max_count: 65535
          attr_list:
            data:
              - {data: 65535, type_size: UINT32}
            type_size: SEQ8
          pattern:
            data:
              - {data: L2CAP, type_size: UUID16}
            type_size: SEQ8
          cont: ""
    header: {flags: START_NO_FLUSH, handle: 1}
  packet_indicator: ACLDATA
- packet:
    data:
      cid: 64
      data: !!binary |
        BwAAAAUAAgAAAA==
    header: {flags: START, handle: 1}
  packet_indicator: ACLDATA
- packet:
    evt: NUM_COMP_PKTS
    params: {count: 1, handle: 1, num_handles: 1}
  packet_indicator: EVENT
---
- packet_indicator: ACLDATA
  packet:
    header: {flags: START_NO_FLUSH, handle: 1}
    data:
      cid: 64
      data: !sdp
        pdu_id: SVC_SEARCH_ATTR_REQ
        tid: 1
        params:
          max_count: 65535
          attr_list:
            data:
              - {data: 65535, type_size: UINT32}
            type_size: SEQ8
          pattern:
            data:
              - {data: PNP_INFO, type_size: UUID16}
            type_size: SEQ8
          cont: ""
- packet:
    data:
      cid: 64
      data: !!binary |
        BwABAAUAAgAAAA==
    header: {flags: START, handle: 1}
  packet_indicator: ACLDATA
- packet:
    evt: NUM_COMP_PKTS
    params: {count: 1, handle: 1, num_handles: 1}
  packet_indicator: EVENT
---
- packet_indicator: ACLDATA
  packet:
    header: {flags: START_NO_FLUSH, handle: 1}
    data:
      cid: 64
      data: !sdp
        pdu_id: SVC_SEARCH_ATTR_REQ
        tid: 2
        params:
          max_count: 65535
          attr_list:
            data:
              - {data: 65535, type_size: UINT32}
            type_size: SEQ8
          pattern:
            data:
              - {data: PUBLIC_BROWSE_GROUP, type_size: UUID16}
            type_size: SEQ8
          cont: ""
- packet:
    data:
      cid: 64
      data: !!binary |
        BwACAAUAAgAAAA==
    header: {flags: START, handle: 1}
  packet_indicator: ACLDATA
- packet:
    evt: NUM_COMP_PKTS
    params: {count: 1, handle: 1, num_handles: 1}
  packet_indicator: EVENT
